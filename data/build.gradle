apply plugin: 'com.android.library'

//调整编译环境需要用到的工具
//apply plugin: 'com.neenbedankt.android-apt'
// java8 lambda的表达式
apply plugin: 'me.tatarka.retrolambda'

android {

    def config = rootProject.extensions.getByName("ext");

    compileSdkVersion config.getAt("compileSdkVersion")
    buildToolsVersion config.getAt("buildToolsVersion")

    defaultConfig {

        minSdkVersion config.getAt("minSdkVersion")
        targetSdkVersion config.getAt("targetSdkVersion")
        versionCode config.getAt("androidVersionCode")
        versionName config.getAt("androidVersionName")

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile project(':domain')
    compile project(':tools')

    testCompile 'junit:junit:4.12'
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })

    def dependencies = rootProject.ext.appDependencies
    compile dependencies.dagger
    provided dependencies.daggerCompiler

    compile dependencies.androidSupport
    compile dependencies.rxJava

    compile dependencies.gson

    compile dependencies.retrofit
    compile dependencies.retrofit_gson
    compile dependencies.retrofit_adapter

}
